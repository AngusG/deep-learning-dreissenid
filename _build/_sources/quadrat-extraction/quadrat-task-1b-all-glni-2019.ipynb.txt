{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Extract the quadrat from all GLNI images in the dataset\n",
    "\n",
    "This is a preprocessing step for generating predictions on GLNI 2019 data.\n",
    "\n",
    "### To successfully extract a quadrat the algorithm assumes:\n",
    "\n",
    "- All four corners of the quadrat are contained in the image, i.e.~the side lengths or corners are not \n",
    "cropped from the scene.\n",
    "\n",
    "- The quadrat side lengths are not occluded, e.g., by diver equipment, mesh bags, or vegetation.\n",
    "\n",
    "- The image is sufficiently clear, i.e.~not turbulent or cloudy from disrupted sediment.\n",
    "\n",
    "- The camera angle is within $65-90^{\\circ}$ with respect to the top surface of the quadrat.\n",
    "Note that this is separate from quadrat rotation in the camera plane, which can be arbitrary.\n",
    "\n",
    "- The camera is not too far from the quadrat such that the side lengths are less than 400 pixels \n",
    "for $1080 \\times 1440$ resolution, 500 pixels for $1080 \\times 1920$ HD resolution, or 400 for portrait mode in HD res.\n",
    "\n",
    "The algorithm still works reasonably well in some cases even when the assumptions are violated, e.g., input 7 with the mesh bag covering one of the corners, as missing corner coordinates can sometimes be inferred if enough complementary lines are detected. Conversely, even when the assumptions are satisfied, a best effort is made to extract the *interior* of the quadrat, but this occaisionally won't be possible due to missing or misleading lines and part of the quadrat may be included in the output.\n",
    "\n",
    "Prior to running this notebook you must set:\n",
    "\n",
    "1. The `DRAW` variable annotates intermediate results on the image and is nice for visualizing results. It \n",
    "should be set to False for saving the final output.\n",
    "\n",
    "2. The default values for all other parameters can be left as they are.\n",
    "\n",
    "When `DRAW=True`, you will see annotations in the __Post-Processing__ pane.\n",
    "- Large green circles are corner centroids found by K-means\n",
    "- Medium blue circles are all line intersection points after the final stage of processing\n",
    "- Small white circles are proposed crop locations (the quadrat interior corner points)\n",
    "- The X lines corresponding to 'Using X of Y lines' after rejecting outliers and merging similar lines are shown in blue\n",
    "\n",
    "Dependencies:\n",
    "- `opencv.__version__==4.2.0`\n",
    "- `skimage.__version__==0.16.2` "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "DRAW = False\n",
    "\n",
    "# Do manual crop based on pixel range that depends only on resolution and portrait or landscape orientation\n",
    "MANUAL_CROP = True  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Reading data from /media/angus/cciw/Data\n",
      "Saving cropped images to /media/angus/cciw/Data/Videos_and_stills/TestingSet/GLNI_Quadrats/full-size-man\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import os.path as osp\n",
    "import sys\n",
    "\n",
    "IN_COLAB = 'google.colab' in sys.modules\n",
    "\n",
    "if IN_COLAB:\n",
    "    from google.colab import drive\n",
    "    drive.mount('/content/drive')\n",
    "    DATA_PATH = r'/content/drive/My Drive/Data'\n",
    "    SAVE_PATH = osp.join(DATA_PATH, 'Quadrat_Extraction_from_Stills')\n",
    "    \n",
    "    # cd into current directory so local imports work\n",
    "    %cd '/content/drive/My Drive/cciw-zebra-mussel/quadrat-extraction/'\n",
    "else:\n",
    "    DATA_PATH = osp.join(os.environ['DATA_PATH'], 'cciw/Data')\n",
    "    SAVE_PATH = osp.join(os.environ['DATA_PATH'], 'cciw/Data/Videos_and_stills/TestingSet/GLNI_Quadrats/full-size-man')\n",
    "    \n",
    "print('Reading data from', DATA_PATH)    \n",
    "print('Saving cropped images to', SAVE_PATH)    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import cv2\n",
    "import numpy as np\n",
    "\n",
    "import time\n",
    "from glob import glob\n",
    "\n",
    "# local import\n",
    "from utils import crop_still_image_no_rotate, compute_pairwise_distances\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "from sklearn.cluster import KMeans"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found 403 still images\n"
     ]
    }
   ],
   "source": [
    "# Search for all still files in the datset\n",
    "stills = glob(os.path.join(DATA_PATH,'Videos_and_stills/TestingSet/GLNI/*/*/*/*/*/*.jpg'))\n",
    "print('Found %d still images' % len(stills))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# indices of data in x and y position respectively\n",
    "X, Y = 0, 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "scale_percent = 25\n",
    "\n",
    "s = (100 // scale_percent)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'@param maxLineGap Maximum allowed gap between points \\non the same line to link them. (pixels)'"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\"\"\"x_trim and y_trim are used to remove black padding\n",
    "for 1080x1440 video which triggers spurious edges\"\"\"\n",
    "\n",
    "\"\"\"@param canny_thresh initial hysteresis values for Canny edge \n",
    "detector, input to HoughLines\"\"\"\n",
    "\n",
    "\"\"\"@param threshold Accumulator threshold, return \n",
    "lines with more than threshold of votes. (intersection points)\"\"\"\n",
    "threshold = 125\n",
    "\n",
    "\"\"\"@param minLineLength Minimum line length. \n",
    "Line segments shorter than that are rejected. (pixels)\"\"\"\n",
    "\n",
    "\"\"\"@param maxLineGap Maximum allowed gap between points \n",
    "on the same line to link them. (pixels)\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0  case 1 of 4: small resolution, portrait mode\n",
      "1  case 1 of 4: small resolution, portrait mode\n",
      "2  case 2 of 4: small resolution, landscape mode\n",
      "3  case 2 of 4: small resolution, landscape mode\n",
      "4  case 2 of 4: small resolution, landscape mode\n",
      "5  case 2 of 4: small resolution, landscape mode\n",
      "6  case 2 of 4: small resolution, landscape mode\n",
      "7  case 2 of 4: small resolution, landscape mode\n",
      "8  case 2 of 4: small resolution, landscape mode\n",
      "9  case 3 of 4: large resolution, portrait mode\n",
      "10  case 4 of 4: large resolution, landscape mode\n",
      "11  case 3 of 4: large resolution, portrait mode\n",
      "12  case 4 of 4: large resolution, landscape mode\n",
      "13  case 4 of 4: large resolution, landscape mode\n",
      "14  case 3 of 4: large resolution, portrait mode\n",
      "15  case 4 of 4: large resolution, landscape mode\n",
      "16  case 4 of 4: large resolution, landscape mode\n",
      "17  case 4 of 4: large resolution, landscape mode\n",
      "18  case 4 of 4: large resolution, landscape mode\n",
      "19  case 4 of 4: large resolution, landscape mode\n",
      "20  case 3 of 4: large resolution, portrait mode\n",
      "21  case 3 of 4: large resolution, portrait mode\n",
      "22  case 4 of 4: large resolution, landscape mode\n",
      "23  case 4 of 4: large resolution, landscape mode\n",
      "24  case 4 of 4: large resolution, landscape mode\n",
      "25  case 4 of 4: large resolution, landscape mode\n",
      "26  case 4 of 4: large resolution, landscape mode\n",
      "27  case 4 of 4: large resolution, landscape mode\n",
      "28  case 3 of 4: large resolution, portrait mode\n",
      "29  case 3 of 4: large resolution, portrait mode\n",
      "30  case 3 of 4: large resolution, portrait mode\n",
      "31  case 3 of 4: large resolution, portrait mode\n",
      "32  case 3 of 4: large resolution, portrait mode\n",
      "33  case 4 of 4: large resolution, landscape mode\n",
      "34  case 3 of 4: large resolution, portrait mode\n",
      "35  case 3 of 4: large resolution, portrait mode\n",
      "36  case 4 of 4: large resolution, landscape mode\n",
      "37  case 4 of 4: large resolution, landscape mode\n",
      "38  case 4 of 4: large resolution, landscape mode\n",
      "39  case 3 of 4: large resolution, portrait mode\n",
      "40  case 2 of 4: small resolution, landscape mode\n",
      "41  case 2 of 4: small resolution, landscape mode\n",
      "42  case 2 of 4: small resolution, landscape mode\n",
      "43  case 2 of 4: small resolution, landscape mode\n",
      "44  case 2 of 4: small resolution, landscape mode\n",
      "45  case 1 of 4: small resolution, portrait mode\n",
      "46  case 1 of 4: small resolution, portrait mode\n",
      "47  case 1 of 4: small resolution, portrait mode\n",
      "48  case 1 of 4: small resolution, portrait mode\n",
      "49  case 2 of 4: small resolution, landscape mode\n",
      "50  case 2 of 4: small resolution, landscape mode\n",
      "51  case 2 of 4: small resolution, landscape mode\n",
      "52  case 2 of 4: small resolution, landscape mode\n",
      "53  case 4 of 4: large resolution, landscape mode\n",
      "54  case 3 of 4: large resolution, portrait mode\n",
      "55  case 4 of 4: large resolution, landscape mode\n",
      "56  case 4 of 4: large resolution, landscape mode\n",
      "57  case 1 of 4: small resolution, portrait mode\n",
      "58  case 1 of 4: small resolution, portrait mode\n",
      "59  case 1 of 4: small resolution, portrait mode\n",
      "60  case 4 of 4: large resolution, landscape mode\n",
      "61  case 4 of 4: large resolution, landscape mode\n",
      "62  case 4 of 4: large resolution, landscape mode\n",
      "63  case 4 of 4: large resolution, landscape mode\n",
      "64  case 4 of 4: large resolution, landscape mode\n",
      "65  case 4 of 4: large resolution, landscape mode\n",
      "66  case 4 of 4: large resolution, landscape mode\n",
      "67  case 4 of 4: large resolution, landscape mode\n",
      "68  case 4 of 4: large resolution, landscape mode\n",
      "69  case 4 of 4: large resolution, landscape mode\n",
      "70  case 4 of 4: large resolution, landscape mode\n",
      "71  case 4 of 4: large resolution, landscape mode\n",
      "72  case 4 of 4: large resolution, landscape mode\n",
      "73  case 4 of 4: large resolution, landscape mode\n",
      "74  case 4 of 4: large resolution, landscape mode\n",
      "75  case 4 of 4: large resolution, landscape mode\n",
      "76  case 4 of 4: large resolution, landscape mode\n",
      "77  case 3 of 4: large resolution, portrait mode\n",
      "78  case 3 of 4: large resolution, portrait mode\n",
      "79  case 4 of 4: large resolution, landscape mode\n",
      "80  case 3 of 4: large resolution, portrait mode\n",
      "81  case 2 of 4: small resolution, landscape mode\n",
      "82  case 1 of 4: small resolution, portrait mode\n",
      "83  case 1 of 4: small resolution, portrait mode\n",
      "84  case 1 of 4: small resolution, portrait mode\n",
      "85  case 1 of 4: small resolution, portrait mode\n",
      "86  case 2 of 4: small resolution, landscape mode\n",
      "87  case 2 of 4: small resolution, landscape mode\n",
      "88  case 3 of 4: large resolution, portrait mode\n",
      "89  case 3 of 4: large resolution, portrait mode\n",
      "90  case 4 of 4: large resolution, landscape mode\n",
      "91  case 4 of 4: large resolution, landscape mode\n",
      "92  case 3 of 4: large resolution, portrait mode\n",
      "93  case 3 of 4: large resolution, portrait mode\n",
      "94  case 4 of 4: large resolution, landscape mode\n",
      "95  case 3 of 4: large resolution, portrait mode\n",
      "96  case 4 of 4: large resolution, landscape mode\n",
      "97  case 4 of 4: large resolution, landscape mode\n",
      "98  case 3 of 4: large resolution, portrait mode\n",
      "99  case 4 of 4: large resolution, landscape mode\n",
      "100  case 4 of 4: large resolution, landscape mode\n",
      "101  case 4 of 4: large resolution, landscape mode\n",
      "102  case 3 of 4: large resolution, portrait mode\n",
      "103  case 4 of 4: large resolution, landscape mode\n",
      "104  case 3 of 4: large resolution, portrait mode\n",
      "105  case 3 of 4: large resolution, portrait mode\n",
      "106  case 3 of 4: large resolution, portrait mode\n",
      "107  case 1 of 4: small resolution, portrait mode\n",
      "108  case 1 of 4: small resolution, portrait mode\n",
      "109  case 1 of 4: small resolution, portrait mode\n",
      "110  case 2 of 4: small resolution, landscape mode\n",
      "111  case 2 of 4: small resolution, landscape mode\n",
      "112  case 2 of 4: small resolution, landscape mode\n",
      "113  case 2 of 4: small resolution, landscape mode\n",
      "114  case 2 of 4: small resolution, landscape mode\n",
      "115  case 1 of 4: small resolution, portrait mode\n",
      "116  case 1 of 4: small resolution, portrait mode\n",
      "117  case 2 of 4: small resolution, landscape mode\n",
      "118  case 1 of 4: small resolution, portrait mode\n",
      "119  case 1 of 4: small resolution, portrait mode\n",
      "120  case 1 of 4: small resolution, portrait mode\n",
      "121  case 3 of 4: large resolution, portrait mode\n",
      "122  case 3 of 4: large resolution, portrait mode\n",
      "123  case 3 of 4: large resolution, portrait mode\n",
      "124  case 3 of 4: large resolution, portrait mode\n",
      "125  case 4 of 4: large resolution, landscape mode\n",
      "126  case 4 of 4: large resolution, landscape mode\n",
      "127  case 3 of 4: large resolution, portrait mode\n",
      "128  case 3 of 4: large resolution, portrait mode\n",
      "129  case 3 of 4: large resolution, portrait mode\n",
      "130  case 3 of 4: large resolution, portrait mode\n",
      "131  case 4 of 4: large resolution, landscape mode\n",
      "132  case 4 of 4: large resolution, landscape mode\n",
      "133  case 4 of 4: large resolution, landscape mode\n",
      "134  case 4 of 4: large resolution, landscape mode\n",
      "135  case 4 of 4: large resolution, landscape mode\n",
      "136  case 3 of 4: large resolution, portrait mode\n",
      "137  case 3 of 4: large resolution, portrait mode\n",
      "138  case 4 of 4: large resolution, landscape mode\n",
      "139  case 3 of 4: large resolution, portrait mode\n",
      "140  case 4 of 4: large resolution, landscape mode\n",
      "141  case 4 of 4: large resolution, landscape mode\n",
      "142  case 3 of 4: large resolution, portrait mode\n",
      "143  case 4 of 4: large resolution, landscape mode\n",
      "144  case 3 of 4: large resolution, portrait mode\n",
      "145  case 4 of 4: large resolution, landscape mode\n",
      "146  case 3 of 4: large resolution, portrait mode\n",
      "147  case 3 of 4: large resolution, portrait mode\n",
      "148  case 3 of 4: large resolution, portrait mode\n",
      "149  case 3 of 4: large resolution, portrait mode\n",
      "150  case 3 of 4: large resolution, portrait mode\n",
      "151  case 4 of 4: large resolution, landscape mode\n",
      "152  case 3 of 4: large resolution, portrait mode\n",
      "153  case 3 of 4: large resolution, portrait mode\n",
      "154  case 4 of 4: large resolution, landscape mode\n",
      "155  case 3 of 4: large resolution, portrait mode\n",
      "156  case 3 of 4: large resolution, portrait mode\n",
      "157  case 1 of 4: small resolution, portrait mode\n",
      "158  case 1 of 4: small resolution, portrait mode\n",
      "159  case 1 of 4: small resolution, portrait mode\n",
      "160  case 1 of 4: small resolution, portrait mode\n",
      "161  case 3 of 4: large resolution, portrait mode\n",
      "162  case 1 of 4: small resolution, portrait mode\n",
      "163  case 1 of 4: small resolution, portrait mode\n",
      "164  case 1 of 4: small resolution, portrait mode\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "165  case 1 of 4: small resolution, portrait mode\n",
      "166  case 1 of 4: small resolution, portrait mode\n",
      "167  case 1 of 4: small resolution, portrait mode\n",
      "168  case 1 of 4: small resolution, portrait mode\n",
      "169  case 1 of 4: small resolution, portrait mode\n",
      "170  case 3 of 4: large resolution, portrait mode\n",
      "171  case 3 of 4: large resolution, portrait mode\n",
      "172  case 3 of 4: large resolution, portrait mode\n",
      "173  case 3 of 4: large resolution, portrait mode\n",
      "174  case 3 of 4: large resolution, portrait mode\n",
      "175  case 3 of 4: large resolution, portrait mode\n",
      "176  case 4 of 4: large resolution, landscape mode\n",
      "177  case 4 of 4: large resolution, landscape mode\n",
      "178  case 4 of 4: large resolution, landscape mode\n",
      "179  case 3 of 4: large resolution, portrait mode\n",
      "180  case 3 of 4: large resolution, portrait mode\n",
      "181  case 1 of 4: small resolution, portrait mode\n",
      "182  case 1 of 4: small resolution, portrait mode\n",
      "183  case 2 of 4: small resolution, landscape mode\n",
      "184  case 2 of 4: small resolution, landscape mode\n",
      "185  case 2 of 4: small resolution, landscape mode\n",
      "186  case 2 of 4: small resolution, landscape mode\n",
      "187  case 3 of 4: large resolution, portrait mode\n",
      "188  case 4 of 4: large resolution, landscape mode\n",
      "189  case 3 of 4: large resolution, portrait mode\n",
      "190  case 3 of 4: large resolution, portrait mode\n",
      "191  case 4 of 4: large resolution, landscape mode\n",
      "192  case 4 of 4: large resolution, landscape mode\n",
      "193  case 3 of 4: large resolution, portrait mode\n",
      "194  case 4 of 4: large resolution, landscape mode\n",
      "195  case 3 of 4: large resolution, portrait mode\n",
      "196  case 3 of 4: large resolution, portrait mode\n",
      "197  case 3 of 4: large resolution, portrait mode\n",
      "198  case 3 of 4: large resolution, portrait mode\n",
      "199  case 4 of 4: large resolution, landscape mode\n",
      "200  case 3 of 4: large resolution, portrait mode\n",
      "201  case 4 of 4: large resolution, landscape mode\n",
      "202  case 4 of 4: large resolution, landscape mode\n",
      "203  case 4 of 4: large resolution, landscape mode\n",
      "204  case 3 of 4: large resolution, portrait mode\n",
      "205  case 3 of 4: large resolution, portrait mode\n",
      "206  case 3 of 4: large resolution, portrait mode\n",
      "207  case 2 of 4: small resolution, landscape mode\n",
      "208  case 2 of 4: small resolution, landscape mode\n",
      "209  case 2 of 4: small resolution, landscape mode\n",
      "210  case 2 of 4: small resolution, landscape mode\n",
      "211  case 1 of 4: small resolution, portrait mode\n",
      "212  case 2 of 4: small resolution, landscape mode\n",
      "213  case 4 of 4: large resolution, landscape mode\n",
      "214  case 3 of 4: large resolution, portrait mode\n",
      "215  case 4 of 4: large resolution, landscape mode\n",
      "216  case 4 of 4: large resolution, landscape mode\n",
      "217  case 4 of 4: large resolution, landscape mode\n",
      "218  case 3 of 4: large resolution, portrait mode\n",
      "219  case 3 of 4: large resolution, portrait mode\n",
      "220  case 1 of 4: small resolution, portrait mode\n",
      "221  case 1 of 4: small resolution, portrait mode\n",
      "222  case 1 of 4: small resolution, portrait mode\n",
      "223  case 1 of 4: small resolution, portrait mode\n",
      "224  case 1 of 4: small resolution, portrait mode\n",
      "225  case 2 of 4: small resolution, landscape mode\n",
      "226  case 2 of 4: small resolution, landscape mode\n",
      "227  case 2 of 4: small resolution, landscape mode\n",
      "228  case 3 of 4: large resolution, portrait mode\n",
      "229  case 4 of 4: large resolution, landscape mode\n",
      "230  case 4 of 4: large resolution, landscape mode\n",
      "231  case 4 of 4: large resolution, landscape mode\n",
      "232  case 4 of 4: large resolution, landscape mode\n",
      "233  case 4 of 4: large resolution, landscape mode\n",
      "234  case 4 of 4: large resolution, landscape mode\n",
      "235  case 2 of 4: small resolution, landscape mode\n",
      "236  case 2 of 4: small resolution, landscape mode\n",
      "237  case 2 of 4: small resolution, landscape mode\n",
      "238  case 2 of 4: small resolution, landscape mode\n",
      "239  case 1 of 4: small resolution, portrait mode\n",
      "240  case 2 of 4: small resolution, landscape mode\n",
      "241  case 2 of 4: small resolution, landscape mode\n",
      "242  case 2 of 4: small resolution, landscape mode\n",
      "243  case 2 of 4: small resolution, landscape mode\n",
      "244  case 2 of 4: small resolution, landscape mode\n",
      "245  case 2 of 4: small resolution, landscape mode\n",
      "246  case 3 of 4: large resolution, portrait mode\n",
      "247  case 3 of 4: large resolution, portrait mode\n",
      "248  case 4 of 4: large resolution, landscape mode\n",
      "249  case 4 of 4: large resolution, landscape mode\n",
      "250  case 4 of 4: large resolution, landscape mode\n",
      "251  case 3 of 4: large resolution, portrait mode\n",
      "252  case 4 of 4: large resolution, landscape mode\n",
      "253  case 3 of 4: large resolution, portrait mode\n",
      "254  case 4 of 4: large resolution, landscape mode\n",
      "255  case 4 of 4: large resolution, landscape mode\n",
      "256  case 3 of 4: large resolution, portrait mode\n",
      "257  case 3 of 4: large resolution, portrait mode\n",
      "258  case 4 of 4: large resolution, landscape mode\n",
      "259  case 4 of 4: large resolution, landscape mode\n",
      "260  case 2 of 4: small resolution, landscape mode\n",
      "261  case 2 of 4: small resolution, landscape mode\n",
      "262  case 4 of 4: large resolution, landscape mode\n",
      "263  case 1 of 4: small resolution, portrait mode\n",
      "264  case 1 of 4: small resolution, portrait mode\n",
      "265  case 1 of 4: small resolution, portrait mode\n",
      "266  case 1 of 4: small resolution, portrait mode\n",
      "267  case 2 of 4: small resolution, landscape mode\n",
      "268  case 2 of 4: small resolution, landscape mode\n",
      "269  case 2 of 4: small resolution, landscape mode\n",
      "270  case 2 of 4: small resolution, landscape mode\n",
      "271  case 2 of 4: small resolution, landscape mode\n",
      "272  case 1 of 4: small resolution, portrait mode\n",
      "273  case 2 of 4: small resolution, landscape mode\n",
      "274  case 2 of 4: small resolution, landscape mode\n",
      "275  case 1 of 4: small resolution, portrait mode\n",
      "276  case 1 of 4: small resolution, portrait mode\n",
      "277  case 1 of 4: small resolution, portrait mode\n",
      "278  case 4 of 4: large resolution, landscape mode\n",
      "279  case 4 of 4: large resolution, landscape mode\n",
      "280  case 3 of 4: large resolution, portrait mode\n",
      "281  case 3 of 4: large resolution, portrait mode\n",
      "282  case 4 of 4: large resolution, landscape mode\n",
      "283  case 4 of 4: large resolution, landscape mode\n",
      "284  case 4 of 4: large resolution, landscape mode\n",
      "285  case 4 of 4: large resolution, landscape mode\n",
      "286  case 4 of 4: large resolution, landscape mode\n",
      "287  case 4 of 4: large resolution, landscape mode\n",
      "288  case 4 of 4: large resolution, landscape mode\n",
      "289  case 4 of 4: large resolution, landscape mode\n",
      "290  case 3 of 4: large resolution, portrait mode\n",
      "291  case 4 of 4: large resolution, landscape mode\n",
      "292  case 4 of 4: large resolution, landscape mode\n",
      "293  case 4 of 4: large resolution, landscape mode\n",
      "294  case 4 of 4: large resolution, landscape mode\n",
      "295  case 3 of 4: large resolution, portrait mode\n",
      "296  case 3 of 4: large resolution, portrait mode\n",
      "297  case 4 of 4: large resolution, landscape mode\n",
      "298  case 4 of 4: large resolution, landscape mode\n",
      "299  case 3 of 4: large resolution, portrait mode\n",
      "300  case 3 of 4: large resolution, portrait mode\n",
      "301  case 2 of 4: small resolution, landscape mode\n",
      "302  case 4 of 4: large resolution, landscape mode\n",
      "303  case 2 of 4: small resolution, landscape mode\n",
      "304  case 2 of 4: small resolution, landscape mode\n",
      "305  case 2 of 4: small resolution, landscape mode\n",
      "306  case 2 of 4: small resolution, landscape mode\n",
      "307  case 2 of 4: small resolution, landscape mode\n",
      "308  case 2 of 4: small resolution, landscape mode\n",
      "309  case 2 of 4: small resolution, landscape mode\n",
      "310  case 2 of 4: small resolution, landscape mode\n",
      "311  case 3 of 4: large resolution, portrait mode\n",
      "312  case 3 of 4: large resolution, portrait mode\n",
      "313  case 3 of 4: large resolution, portrait mode\n",
      "314  case 3 of 4: large resolution, portrait mode\n",
      "315  case 3 of 4: large resolution, portrait mode\n",
      "316  case 3 of 4: large resolution, portrait mode\n",
      "317  case 4 of 4: large resolution, landscape mode\n",
      "318  case 4 of 4: large resolution, landscape mode\n",
      "319  case 4 of 4: large resolution, landscape mode\n",
      "320  case 4 of 4: large resolution, landscape mode\n",
      "321  case 4 of 4: large resolution, landscape mode\n",
      "322  case 4 of 4: large resolution, landscape mode\n",
      "323  case 4 of 4: large resolution, landscape mode\n",
      "324  case 4 of 4: large resolution, landscape mode\n",
      "325  case 4 of 4: large resolution, landscape mode\n",
      "326  case 4 of 4: large resolution, landscape mode\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "327  case 3 of 4: large resolution, portrait mode\n",
      "328  case 3 of 4: large resolution, portrait mode\n",
      "329  case 2 of 4: small resolution, landscape mode\n",
      "330  case 1 of 4: small resolution, portrait mode\n",
      "331  case 2 of 4: small resolution, landscape mode\n",
      "332  case 2 of 4: small resolution, landscape mode\n",
      "333  case 2 of 4: small resolution, landscape mode\n",
      "334  case 1 of 4: small resolution, portrait mode\n",
      "335  case 1 of 4: small resolution, portrait mode\n",
      "336  case 1 of 4: small resolution, portrait mode\n",
      "337  case 4 of 4: large resolution, landscape mode\n",
      "338  case 4 of 4: large resolution, landscape mode\n",
      "339  case 4 of 4: large resolution, landscape mode\n",
      "340  case 4 of 4: large resolution, landscape mode\n",
      "341  case 3 of 4: large resolution, portrait mode\n",
      "342  case 3 of 4: large resolution, portrait mode\n",
      "343  case 3 of 4: large resolution, portrait mode\n",
      "344  case 3 of 4: large resolution, portrait mode\n",
      "345  case 4 of 4: large resolution, landscape mode\n",
      "346  case 3 of 4: large resolution, portrait mode\n",
      "347  case 3 of 4: large resolution, portrait mode\n",
      "348  case 3 of 4: large resolution, portrait mode\n",
      "349  case 3 of 4: large resolution, portrait mode\n",
      "350  case 4 of 4: large resolution, landscape mode\n",
      "351  case 1 of 4: small resolution, portrait mode\n",
      "352  case 2 of 4: small resolution, landscape mode\n",
      "353  case 2 of 4: small resolution, landscape mode\n",
      "354  case 2 of 4: small resolution, landscape mode\n",
      "355  case 1 of 4: small resolution, portrait mode\n",
      "356  case 1 of 4: small resolution, portrait mode\n",
      "357  case 1 of 4: small resolution, portrait mode\n",
      "358  case 2 of 4: small resolution, landscape mode\n",
      "359  case 1 of 4: small resolution, portrait mode\n",
      "360  case 1 of 4: small resolution, portrait mode\n",
      "361  case 1 of 4: small resolution, portrait mode\n",
      "362  case 1 of 4: small resolution, portrait mode\n",
      "363  case 1 of 4: small resolution, portrait mode\n",
      "364  case 1 of 4: small resolution, portrait mode\n",
      "365  case 1 of 4: small resolution, portrait mode\n",
      "366  case 3 of 4: large resolution, portrait mode\n",
      "367  case 4 of 4: large resolution, landscape mode\n",
      "368  case 3 of 4: large resolution, portrait mode\n",
      "369  case 4 of 4: large resolution, landscape mode\n",
      "370  case 3 of 4: large resolution, portrait mode\n",
      "371  case 3 of 4: large resolution, portrait mode\n",
      "372  case 3 of 4: large resolution, portrait mode\n",
      "373  case 3 of 4: large resolution, portrait mode\n",
      "374  case 3 of 4: large resolution, portrait mode\n",
      "375  case 3 of 4: large resolution, portrait mode\n",
      "376  case 3 of 4: large resolution, portrait mode\n",
      "377  case 4 of 4: large resolution, landscape mode\n",
      "378  case 4 of 4: large resolution, landscape mode\n",
      "379  case 1 of 4: small resolution, portrait mode\n",
      "380  case 2 of 4: small resolution, landscape mode\n",
      "381  case 1 of 4: small resolution, portrait mode\n",
      "382  case 4 of 4: large resolution, landscape mode\n",
      "383  case 4 of 4: large resolution, landscape mode\n",
      "384  case 3 of 4: large resolution, portrait mode\n",
      "385  case 3 of 4: large resolution, portrait mode\n",
      "386  case 4 of 4: large resolution, landscape mode\n",
      "387  case 4 of 4: large resolution, landscape mode\n",
      "388  case 3 of 4: large resolution, portrait mode\n",
      "389  case 4 of 4: large resolution, landscape mode\n",
      "390  case 3 of 4: large resolution, portrait mode\n",
      "391  case 3 of 4: large resolution, portrait mode\n",
      "392  case 3 of 4: large resolution, portrait mode\n",
      "393  case 4 of 4: large resolution, landscape mode\n",
      "394  case 4 of 4: large resolution, landscape mode\n",
      "395  case 3 of 4: large resolution, portrait mode\n",
      "396  case 3 of 4: large resolution, portrait mode\n",
      "397  case 4 of 4: large resolution, landscape mode\n",
      "398  case 4 of 4: large resolution, landscape mode\n",
      "399  case 3 of 4: large resolution, portrait mode\n",
      "400  case 3 of 4: large resolution, portrait mode\n",
      "401  case 4 of 4: large resolution, landscape mode\n",
      "402  case 4 of 4: large resolution, landscape mode\n"
     ]
    }
   ],
   "source": [
    "mode = 0\n",
    "\n",
    "for i in range(len(stills)):\n",
    "\n",
    "    out_file = stills[i].split('/')[-1].split('.')[0] + '_crop.jpg'\n",
    "    if osp.exists(osp.join(SAVE_PATH, out_file)):\n",
    "        pass\n",
    "        #continue\n",
    "\n",
    "    # load the input image\n",
    "    bgr = cv2.imread(stills[i])\n",
    "    #bgr_orig = bgr.copy()\n",
    "\n",
    "    # case 1 of 4: small resolution, portrait mode\n",
    "    if bgr.shape[1] == 3788:\n",
    "        print(i, ' case 1 of 4: small resolution, portrait mode')\n",
    "        x_trim, y_trim = 100, 1200\n",
    "        #x_trim, y_trim = 200, 1100\n",
    "        canny_thresh1, canny_thresh2 = 10, 50\n",
    "        mLL, mLG = 400, 200    \n",
    "        mode = 1\n",
    "\n",
    "    # case 2 of 4: small resolution, landscape mode\n",
    "    elif bgr.shape[1] == 6738:\n",
    "        print(i, ' case 2 of 4: small resolution, landscape mode')\n",
    "        #x_trim, y_trim = 1000, 1\n",
    "        x_trim, y_trim = 1200, 100\n",
    "        canny_thresh1, canny_thresh2 = 10, 50\n",
    "        mLL, mLG = 400, 200\n",
    "        mode = 2\n",
    "\n",
    "    # case 3 of 4: large resolution, portrait mode\n",
    "    elif bgr.shape[1] == 4924:\n",
    "        print(i, ' case 3 of 4: large resolution, portrait mode')\n",
    "        x_trim, y_trim = 500, 2000\n",
    "        canny_thresh1, canny_thresh2 = 10, 50\n",
    "        mLL, mLG = 450, 225\n",
    "        mode = 3\n",
    "\n",
    "    # case 4 of 4: large resolution, landscape mode\n",
    "    elif bgr.shape[1] == 7378:\n",
    "        #x_trim, y_trim = 1100, 100 # 25% scale\n",
    "        x_trim, y_trim = 2000, 500 # 100% scale\n",
    "        print(i, ' case 4 of 4: large resolution, landscape mode')\n",
    "        canny_thresh1, canny_thresh2 = 10, 50\n",
    "        mLL, mLG = 450, 225    \n",
    "        mode = 4\n",
    "\n",
    "    if MANUAL_CROP:\n",
    "        cv2.imwrite(osp.join(SAVE_PATH, out_file), bgr[y_trim:-y_trim, x_trim:-x_trim, :])\n",
    "    else:\n",
    "        '''\n",
    "        width = int(bgr.shape[1] * scale_percent / 100)\n",
    "        height = int(bgr.shape[0] * scale_percent / 100)    \n",
    "        bgr = cv2.resize(bgr, (width, height)) # resize image\n",
    "        '''\n",
    "        '''\n",
    "        plt.close('all')\n",
    "        plt.figure()\n",
    "        plt.imshow(bgr)\n",
    "        plt.title('Input %d' % i, fontsize=24)\n",
    "        plt.show()\n",
    "        '''\n",
    "        '''\n",
    "        start_time = time.time()\n",
    "        bgr, edges, crop = crop_still_image_no_rotate(\n",
    "            bgr, mll=mLL, mlg=mLG, threshold=threshold, canny_1=canny_thresh1, canny_2=canny_thresh2, do_draw=DRAW)\n",
    "        print('Processing took %.2f sec' % float(time.time() - start_time))\n",
    "        '''\n",
    "        '''\n",
    "        plt.figure()\n",
    "        plt.imshow(cv2.cvtColor(bgr, cv2.COLOR_BGR2RGB))\n",
    "        plt.title('Post-Processing', fontsize=24)\n",
    "        plt.show()\n",
    "        '''\n",
    "        try:\n",
    "            x_start = crop[:, X].min()\n",
    "            x_end = crop[:, X].max()\n",
    "            y_start = crop[:, Y].min()\n",
    "            y_end = crop[:, Y].max()\n",
    "\n",
    "            if (compute_pairwise_distances(crop)[:, 2] < mLL).sum():\n",
    "                print('Corners do not form a square, try to crop based on two clusters')\n",
    "                if mode == 2 or mode == 4:\n",
    "                    centroid_y = crop[:, Y].mean()\n",
    "                    d_from_y_mean = np.abs(crop[:, Y] - centroid_y)\n",
    "                    crop_wrt_y = crop[np.argsort(d_from_y_mean)][:2]       \n",
    "                    x_ref = int(crop_wrt_y[:, X].mean())\n",
    "                    y_start = crop_wrt_y[:, Y].min()\n",
    "                    y_end = crop_wrt_y[:, Y].max()\n",
    "                    '''\n",
    "                    centroid, crop, cluster_centers = centroid_and_crop_pts_k2means(crop)\n",
    "                    # call this x_ref because we don't know if it's left or right\n",
    "                    x_ref = int(crop[:, X].mean())\n",
    "                    y_start = crop[:, Y].min()\n",
    "                    y_end = crop[:, Y].max()\n",
    "                    '''\n",
    "                    delta = y_end - y_start\n",
    "\n",
    "                    if (x_ref + delta) > bgr.shape[1]:\n",
    "                        x_start = x_ref - delta\n",
    "                        x_end = x_ref\n",
    "                    else:\n",
    "                        x_end = x_ref + delta\n",
    "                        x_start = x_ref\n",
    "                else:\n",
    "                    centroid_x = crop[:, X].mean()\n",
    "                    d_from_x_mean = np.abs(crop[:, X] - centroid_x)\n",
    "                    crop_wrt_x = crop[np.argsort(d_from_x_mean)][:2]       \n",
    "                    y_ref = int(crop_wrt_x[:, Y].mean())\n",
    "                    x_start = crop_wrt_x[:, X].min()\n",
    "                    x_end = crop_wrt_x[:, X].max()\n",
    "                    '''            \n",
    "                    centroid, crop, cluster_centers = centroid_and_crop_pts_k2means(crop)\n",
    "                    y_ref = int(crop[:, Y].mean())\n",
    "                    x_start = crop[:, X].min()\n",
    "                    x_end = crop[:, X].max()\n",
    "                    '''\n",
    "                    # call this y_ref because we don't know if it's top or bottom\n",
    "                    delta = x_end - x_start\n",
    "\n",
    "                    if (y_ref + delta) > bgr.shape[0]:\n",
    "                        y_start = y_ref - delta\n",
    "                        y_end = y_ref\n",
    "                    else:\n",
    "                        y_end = y_ref + delta\n",
    "                        y_start = y_ref\n",
    "\n",
    "            if (y_end - y_start) > mLL and (x_end - x_start) > mLL:\n",
    "                try:\n",
    "                    '''\n",
    "                    plt.figure()\n",
    "                    plt.imshow(bgr[y_start:y_end, x_start:x_end, :])\n",
    "                    '''\n",
    "                    #cv2.imwrite(osp.join(SAVE_PATH, out_file), bgr[y_start:y_end, x_start:x_end, :])\n",
    "\n",
    "                    # write a high res version\n",
    "                    cv2.imwrite(osp.join(SAVE_PATH, out_file), bgr_orig[y_start * s:y_end * s, x_start * s:x_end * s, :])\n",
    "                    print(i, 'SUCCESS!')\n",
    "                except:\n",
    "                    print('Cannot write ', out_file)\n",
    "            else:\n",
    "                print('Corners too close to crop')\n",
    "        except:\n",
    "            print('Cannot crop: insufficient number of corner points found')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
