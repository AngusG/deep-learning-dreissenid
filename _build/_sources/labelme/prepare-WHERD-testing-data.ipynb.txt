{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import cv2 as cv\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "from glob import glob\n",
    "from datetime import datetime\n",
    "\n",
    "scale_percent = 75 # percent of original size"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "DATA_PATH = r'/scratch/gallowaa/cciw/Data'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Search for all image files in testing set...\n",
    "all_images = glob(os.path.join(DATA_PATH,'Videos_and_stills/TestingSet/WHERD/*/*/*/*/*.jpg'))\n",
    "print(len(all_images))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "save_path = os.path.join('/scratch/ssd/gallowaa/cciw/dataset_raw_v0-2-x/Test/WHERD')\n",
    "print(save_path)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Run this cell twice"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#all_images"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"Note: Names differ slightly from email with subject line \n",
    "'Selection of images to label for testing set' sent by \n",
    "dominique.brunet@canada.ca Wed 2/12/2020 4:04 PM, \n",
    "add 'FS' prefix to images taken with FishSense camera.\n",
    "\"\"\"\n",
    "    \n",
    "# files to include\n",
    "include_list = [\n",
    "    'WHERD_1353_2019-10-30_GoPro-8.jpg',\n",
    "    'WHERD_1355_2019-10-30_GoPro-5.jpg',\n",
    "    'WHERD_FS1355_2019-11-03_FishSens-1.jpg', # (100% mussel coverage)\n",
    "    'WHERD_HP115410_2019-10-30_GoPro-3.jpg',\n",
    "    'WHERD_HP131641_2019-11-03_GoPro-13.jpg',\n",
    "    'WHERD_FSHP131642_2019-11-03_FishSens-4.jpg',\n",
    "    'WHERD_FSHP131645_2019-11-03_FishSens-6.jpg',\n",
    "    'WHERD_FSHP131649_2019-11-03_FishSens-2.jpg',\n",
    "    'WHERD_LEE06021_2019-10-30_GoPro-3.jpg',\n",
    "    'WHERD_FSLEE06022_2019-11-03_FishSens-1.jpg',\n",
    "    'WHERD_LEE06031_2019-10-30_GoPro-2.jpg',\n",
    "    'WHERD_LEE06032_2019-11-03_GoPro-3.jpg',\n",
    "    'WHERD_LEE06033_2019-10-30_GoPro-8.jpg',\n",
    "    'WHERD_FSLEE06037_2019-11-03_FishSens-1.jpg',\n",
    "    'WHERD_LEE06070_2019-10-30_GoPro-1.jpg', # (no mussels)\n",
    "    'WHERD_LEE06075_2019-10-30_GoPro-11.jpg'\n",
    "]\n",
    "print(len(include_list))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in range(len(all_images)):\n",
    "    f = all_images[i]\n",
    "    if f.split('/')[-1] in include_list:\n",
    "        im = cv.imread(f)\n",
    "        outfile = os.path.join(save_path, f.split('/')[-1])\n",
    "        #outfile = os.path.join(save_path, f.split('/')[-1].split('.')[0] + '_crop.jpg')\n",
    "        cv.imwrite(outfile, im)\n",
    "        print(i, \"saved \", outfile)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
